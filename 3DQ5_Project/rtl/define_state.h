`ifndef DEFINE_STATE

// for top state - we have more states than needed
typedef enum logic [1:0] {
	S_IDLE,
                S_M1,
                S_M2,
	S_UART_RX
} top_state_type;

typedef enum logic [1:0] {
	S_RXC_IDLE,
	S_RXC_SYNC,
	S_RXC_ASSEMBLE_DATA,
	S_RXC_STOP_BIT
} RX_Controller_state_type;

typedef enum logic [2:0] {
	S_US_IDLE,
	S_US_STRIP_FILE_HEADER_1,
	S_US_STRIP_FILE_HEADER_2,
	S_US_START_FIRST_BYTE_RECEIVE,
	S_US_WRITE_FIRST_BYTE,
	S_US_START_SECOND_BYTE_RECEIVE,
	S_US_WRITE_SECOND_BYTE
} UART_SRAM_state_type;

typedef enum logic [3:0] {
	S_VS_WAIT_NEW_PIXEL_ROW,
	S_VS_NEW_PIXEL_ROW_DELAY_1,
	S_VS_NEW_PIXEL_ROW_DELAY_2,
	S_VS_NEW_PIXEL_ROW_DELAY_3,
	S_VS_NEW_PIXEL_ROW_DELAY_4,
	S_VS_NEW_PIXEL_ROW_DELAY_5,
	S_VS_FETCH_PIXEL_DATA_0,
	S_VS_FETCH_PIXEL_DATA_1,
	S_VS_FETCH_PIXEL_DATA_2,
	S_VS_FETCH_PIXEL_DATA_3
} VGA_SRAM_state_type;

typedef enum logic [31:0] {
	S_M1_IDLE,
	S_LI_0,
	S_LI_1,
	S_LI_2,
	S_LI_3,
	S_LI_4,
	S_LI_5,
	S_LI_6,
	S_LI_7,
	S_LI_8,
	S_LI_9,
	S_LI_10,
	S_LI_11,
	S_LI_12,
	S_LI_13,
	S_LI_14,
	S_LI_15,
	S_LI_16,
	S_LI_17,
	S_LI_18,
	S_LI_19,
	S_LI_20,
	S_LI_21,
	S_LI_22,
	S_LI_23,
	S_LI_24,
	S_CC_0,
	S_CC_1,
	S_CC_2,
	S_CC_3,
	S_CC_4,
	S_CC_5,
	S_CC_6,
	S_CC_7,
	S_CC_8,
	S_CC_7_withbuff,
	S_CC_8_withbuff,
               S_LO_0,
	S_LO_1,
	S_LO_2,
	S_LO_3,
	S_LO_4,
	S_LO_5,
	S_LO_6,
	S_LO_7,
	S_LO_8,
                S_LO_9,
	S_LO_10,
	S_LO_11,
	S_LO_12,
	S_LO_13,
	S_LO_14,
	S_LO_15,
	S_LO_16,
	S_LO_17,
                S_LO_18,
	S_LO_19,
	S_LO_20,
	S_LO_21,
	S_LO_22,
	S_LO_23,
	S_LO_24,
	S_LO_25,
	S_LO_26,
                S_LO_27,
	S_LO_28,
	S_LO_29,
	S_LO_30,
	S_LO_31,
	S_LO_32,
	S_LO_33,
	S_LO_34,
	S_LO_35,
                S_LO_36,
	S_LO_37,
	S_LO_38,
                S_Done

} M1_state_type;

typedef enum logic [31:0] {
         S_M2_IDLE,
         LI_FS_0, 
         LI_FS_1,
         LI_FS_2,
         LI_FS_3,
         LI_FS_4,
         LI_FS_5,
         LI_FS_6,
         LI_CT_0,
         LI_CT_1,
         LI_CT_2,
         LI_CT_3,
         LI_CT_4,
         LI_CT_5,
	      LI_CT_6,
	      LI_CT_7,
         CC_CS_FS_0,
	      CC_CS_FS_0_1,
         CC_CS_FS_1,
	      CC_CS_FS_1_1,
         CC_CS_FS_2,
			CC_CS_FS_2_1,
         CC_CS_FS_3,
			CC_CS_FS_3_1,
			CC_CS_FS_3_noFS,
         CC_CS_FS_4,
			CC_CS_FS_4_1,
         CC_CS_FS_5,
			CC_CS_FS_5_1,
         CC_CS_FS_6,
			CC_CS_FS_6_1,
         CC_CS_FS_7,
			CC_CS_FS_8,
			CC_WS_CT_buff,
         CC_WS_CT_0,
			CC_WS_CT_0_1,
         CC_WS_CT_1,
			CC_WS_CT_1_1,
         CC_WS_CT_2,
			CC_WS_CT_2_1,
         CC_WS_CT_3,
         CC_WS_CT_4,
			CC_WS_CT_5_1,
			CC_WS_CT_3_1,
			CC_WS_CT_5_a,
         CC_WS_CT_5,
         CC_WS_CT_6,
         CC_WS_CT_7,
			CC_WS_CT_8,
         CC_WS_CT_last0,
         CC_WS_CT_last1,
         CC_WS_CT_end,
         LO_CS_0,
         LO_CS_1,
         LO_CS_2,
         LO_CS_3,
			LO_CS_0_1,
         LO_CS_1_1,
         LO_CS_2_1,
         LO_CS_3_1,
         LO_CS_4,
         LO_CS_5,
         LO_CS_6,
         LO_CS_7,
			LO_CS_8,
         LO_WS_0,
         LO_WS_1,
         LO_WS_2,
         LO_WS_3,
			LO_WS_1_1,
			LO_WS_2_last_1,
         LO_WS_last0,
         LO_WS_last1,
         M2_Done,
         M2_Done_all,
			S_test

} M2_state_type;


parameter 
   VIEW_AREA_LEFT = 160,
   VIEW_AREA_RIGHT = 480,
   VIEW_AREA_TOP = 120,
   VIEW_AREA_BOTTOM = 360;

`define DEFINE_STATE 1
`endif
